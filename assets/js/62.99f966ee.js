(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{359:function(t,n,e){"use strict";e.r(n),n.default='<template>\n  <table>\n    <colgroup>\n      <col style="width:60px" />\n    </colgroup>\n    <thead>\n      <tr>\n        <th></th>\n        <th colspan="2">->list ->value</th>\n        <th colspan="2">->value ->list</th>\n      </tr>\n      <tr>\n        <th></th>\n        <th>by arr</th>\n        <th>by fn</th>\n        <th>by arr</th>\n        <th>by fn</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td></td>\n        <td><nq-select v-model="v1" :optionList="list1" /></td>\n        <td><nq-select v-model="v1" :optionList="optionList1" /></td>\n        <td><nq-select v-model="v2" :optionList="list2" /></td>\n        <td><nq-select v-model="v2" :optionList="optionList2" /></td>\n      </tr>\n      <tr>\n        <td>list</td>\n        <td\n          colspan="2"\n          :style="{ background: list1.length ? \'green\' : \'transparent\' }"\n        />\n        <td\n          colspan="2"\n          :style="{ background: list2.length ? \'green\' : \'transparent\' }"\n        />\n      </tr>\n      <tr>\n        <td>value</td>\n        <td colspan="2" :style="{ background: v1 ? \'green\' : \'transparent\' }" />\n        <td colspan="2" :style="{ background: v2 ? \'green\' : \'transparent\' }" />\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\nconst list = [\n  { id: 1, name: "label 1" },\n  { id: 2, name: "label 2" },\n];\nconst value = 1;\nexport default {\n  data() {\n    return {\n      v1: "",\n      v2: "",\n      list1: [],\n      list2: [],\n      optionList1: () => this.list1,\n      optionList2: () => this.list2,\n    };\n  },\n  mounted() {\n    // list, value\n    this.delaySet(1, "list1", list).then(() => {\n      this.delaySet(1, "v1", value);\n    });\n    // value, list\n    this.delaySet(1, "v2", value).then(() => {\n      this.delaySet(1, "list2", list);\n    });\n  },\n  methods: {\n    delaySet(sec, propertyName, value) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          this[propertyName] = value;\n          resolve();\n        }, sec * 1000);\n      });\n    },\n  },\n};\n<\/script>\n'}}]);