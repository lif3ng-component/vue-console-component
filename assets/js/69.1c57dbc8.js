(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{366:function(n,e,t){"use strict";t.r(e),e.default='<template>\n  <div>\n    通过 <strong>函数</strong> 设置 className, style\n    <nq-table\n      :columns="columns"\n      :data="data"\n      :cell-class-name="cellClassFn"\n      :cell-style="cellStyleFn"\n    />\n    通过 <strong>常量值</strong> 设置 className, style\n    可以使用，目前没有想到必要的业务场景，不在 Demo 中演示。\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      columns: [\n        { prop: "index", label: "index", template: "{{index}}", width: "50px" },\n        { prop: "gray", label: "灰色列", template: "这列是灰色" },\n        { prop: "count", label: "根据值显示" },\n      ],\n\n      data: [\n        { text: "每行相同行样式", count: 6 },\n        { text: "每行相同行样式" },\n        { text: "每行相同行样式" },\n        { text: "每行相同行样式", count: 3 },\n      ],\n    };\n  },\n  methods: {\n    cellClassFn({ prop, ...args }) {\n      console.log({ prop, ...args });\n      return prop === "gray" ? "row-color-gray" : "";\n    },\n    cellStyleFn({ row: { count }, prop, ...args }) {\n      console.log({ args });\n      return prop === "count" && count\n        ? {\n            background: "green",\n            color: "#fff",\n            fontSize: "30px",\n            fontWidth: 600,\n          }\n        : {};\n    },\n  },\n};\n<\/script>\n<style lang="stylus" scoped>\ndiv\n  >>> .row-color-gray\n    background gray\n    color #eee\n    border-right 10px solid #abc\n</style>\n'}}]);