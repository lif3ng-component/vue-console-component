(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{368:function(n,t,e){"use strict";e.r(t),t.default='<template>\n  <div>\n    <nq-button @click="cycleData">{{ toggleDataBtnText }}</nq-button>\n    <nq-table :key="key" :columns="columns" :data="data" />\n  </div>\n</template>\n<script>\n// RowDataCycle 自定义迭代器，用于模拟表格数据状态轮转\n// index\n// 0: []\n// 1: [{short item}]\n//    asc -> 2\n//    desc -> 0\n// 2: [{long item}]\n\nclass RowDataCycle {\n  constructor() {\n    this.dir = "asc";\n    this.data = [];\n    this.index = 0;\n  }\n  next() {\n    const done = false;\n    if (this.index === 0) {\n      this.data = [\n        { col1: "abc" },\n        { col2: "456" },\n        {\n          col3:\n            "too long text content. aaa bbb ccc ddd eee fff ggg hhh iii jjj.",\n        },\n        { col4: "short" },\n      ];\n      this.index++; // 1\n    } else if (this.index === 1 && this.dir === "asc") {\n      Object.assign(this.data, {\n        0: { col1: "123 abc def xxx" },\n        1: { col2: "456 ghi kl; xxx" },\n      });\n      this.index++; //2\n    } else if (this.index === 1 && this.dir === "desc") {\n      this.data = [];\n      this.index--; //0\n    } else if (this.index === 2) {\n      Object.assign(this.data, { 0: { col1: "123" }, 1: { col2: "456" } });\n      this.index--;\n    }\n\n    if (this.index === 0) {\n      this.dir = "asc";\n    } else if (this.index === 2) {\n      this.dir = "desc";\n    }\n\n    return {\n      done,\n      value: { dir: this.dir, data: this.data, index: this.index },\n    };\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n}\nexport default {\n  data() {\n    const dataCycle = new RowDataCycle();\n    const { data, dir, index } = dataCycle;\n    return {\n      key: 0,\n      data,\n      dataCycleDir: dir,\n      dataCycleIndex: index,\n      dataCycle,\n      columns: [\n        { prop: "col1", label: "nowrap1", sort: true, noWrap: true },\n        { prop: "col2", label: "noWrap2", noWrap: true },\n        { prop: "col3", label: "normal1" },\n        { prop: "col4", label: "noWrap last", noWrap: true },\n      ],\n    };\n  },\n  methods: {\n    cycleData() {\n      const {\n        value: { data, dir, index },\n      } = this.dataCycle.next();\n      this.data.splice(0, 4, ...data);\n      this.dataCycleDir = dir;\n      this.dataCycleIndex = index;\n    },\n  },\n  computed: {\n    toggleDataBtnText() {\n      switch (this.dataCycleIndex) {\n        case 0:\n          return "加载数据";\n        case 1:\n          if (this.dataCycleDir === "asc") {\n            return "noWrap 列变宽";\n          }\n          return "清空数据";\n        case 2:\n          return "noWrap 列变窄";\n        default:\n          return "error";\n      }\n    },\n  },\n};\n<\/script>\n'}}]);